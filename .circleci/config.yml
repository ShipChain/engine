version: 2.1
orbs:
  deploy: shipchain/ecs-deploy@0.0.2
jobs:
  build:
    docker:
      - image: docker/compose:1.21.0
    environment:
      - ROLE: circleci
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Setup Docker network
          command: |
            docker network ls | grep portal > /dev/null || docker network create portal
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip bash
      - run:
          name: Build application Docker images
          command: |
            docker build --target test   --tag engine-node-test .
            docker build --target deploy --tag engine-node --cache-from engine-node-test .
      - run:
          name: Launch the docker containers
          command: |
            bin/dc up -d rpc
      - run:
          name: Check yarn.lock integrity
          command: |
            bin/dc exec -T rpc yarn check --integrity
            bin/dc exec -T rpc yarn check --verify-tree
      - run:
          name: Run lint for JUnit
          command: |
            bin/dc exec -T rpc yarn lint-junit
      - run:
          name: Run lint for HTML
          command: |
            bin/dc exec -T rpc yarn lint-html
      - run:
          name: Run unit tests
          command: |
            bin/dc exec -T rpc yarn test
      - run:
          name: Copy artifacts from Docker
          command: |
            docker cp $(bin/dc ps -q rpc):/app/reports/. reports
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports
      - run:
          name: Save docker image
          command: |
            mkdir -p docker-cache
            docker save -o docker-cache/built-image.tar engine-node
      - save_cache:
          key: docker-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - docker-cache
  push-to-ecr:
    docker:
      - image: docker:stable-git
    steps:
      - deploy/push:
          image: engine-node
  deploy-to-dev:
    docker:
      - image: docker:stable-git
    steps:
      - deploy/promote:
          app: engine
          env: DEV
          image: engine-node
  deploy-to-stage:
    docker:
      - image: docker:stable-git
    steps:
      - deploy/promote:
          app: engine
          env: STAGE
          image: engine-node
  deploy-to-demo:
    docker:
      - image: docker:stable-git
    steps:
      - deploy/promote:
          app: engine
          env: DEMO
          image: engine-node
  deploy-to-prod:
    docker:
      - image: docker:stable-git
    steps:
      - deploy/promote:
          app: engine
          env: PROD
          image: engine-node
workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build
      - push-to-ecr:
          filters:
            branches:
              only: master
          requires:
            - build
      - deploy-to-dev:
          filters:
            branches:
              only: master
          requires:
            - push-to-ecr
      - hold-deploy-stage:
          filters:
            branches:
              only: master
          type: approval
          requires:
            - push-to-ecr
      - deploy-to-stage:
          filters:
            branches:
              only: master
          requires:
            - hold-deploy-stage
      - hold-deploy-demo:
          filters:
            branches:
              only: master
          type: approval
          requires:
            - deploy-to-dev
      - deploy-to-demo:
          filters:
            branches:
              only: master
          requires:
            - hold-deploy-demo
      - hold-deploy-prod:
          filters:
            branches:
              only: master
          type: approval
          requires:
            - deploy-to-stage
      - deploy-to-prod:
          filters:
            branches:
              only: master
          requires:
            - hold-deploy-prod
